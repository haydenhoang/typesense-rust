/*
 * Typesense API
 *
 * An open source search engine for building delightful search experiences.
 *
 * The version of the OpenAPI document: 30.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AnalyticsStatus {
    #[serde(
        rename = "popular_prefix_queries",
        skip_serializing_if = "Option::is_none"
    )]
    pub popular_prefix_queries: Option<i32>,
    #[serde(
        rename = "nohits_prefix_queries",
        skip_serializing_if = "Option::is_none"
    )]
    pub nohits_prefix_queries: Option<i32>,
    #[serde(rename = "log_prefix_queries", skip_serializing_if = "Option::is_none")]
    pub log_prefix_queries: Option<i32>,
    #[serde(rename = "query_log_events", skip_serializing_if = "Option::is_none")]
    pub query_log_events: Option<i32>,
    #[serde(
        rename = "query_counter_events",
        skip_serializing_if = "Option::is_none"
    )]
    pub query_counter_events: Option<i32>,
    #[serde(rename = "doc_log_events", skip_serializing_if = "Option::is_none")]
    pub doc_log_events: Option<i32>,
    #[serde(rename = "doc_counter_events", skip_serializing_if = "Option::is_none")]
    pub doc_counter_events: Option<i32>,
}

impl AnalyticsStatus {
    pub fn new() -> AnalyticsStatus {
        AnalyticsStatus {
            popular_prefix_queries: None,
            nohits_prefix_queries: None,
            log_prefix_queries: None,
            query_log_events: None,
            query_counter_events: None,
            doc_log_events: None,
            doc_counter_events: None,
        }
    }
}
