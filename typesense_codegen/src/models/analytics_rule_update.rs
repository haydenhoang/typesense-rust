/*
 * Typesense API
 *
 * An open source search engine for building delightful search experiences.
 *
 * The version of the OpenAPI document: 30.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AnalyticsRuleUpdate : Fields allowed to update on an analytics rule
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AnalyticsRuleUpdate {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "rule_tag", skip_serializing_if = "Option::is_none")]
    pub rule_tag: Option<String>,
    #[serde(rename = "params", skip_serializing_if = "Option::is_none")]
    pub params: Option<Box<models::AnalyticsRuleCreateParams>>,
}

impl AnalyticsRuleUpdate {
    /// Fields allowed to update on an analytics rule
    pub fn new() -> AnalyticsRuleUpdate{
        AnalyticsRuleUpdate {
            name: None,
            rule_tag: None,
            params: None,
        }
    }
}

