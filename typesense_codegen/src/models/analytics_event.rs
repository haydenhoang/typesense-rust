/*
 * Typesense API
 *
 * An open source search engine for building delightful search experiences.
 *
 * The version of the OpenAPI document: 30.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AnalyticsEvent {
    /// Name of the analytics rule this event corresponds to
    #[serde(rename = "name")]
    pub name: String,
    /// Type of event (e.g., click, conversion, query, visit)
    #[serde(rename = "event_type")]
    pub event_type: String,
    #[serde(rename = "data")]
    pub data: Box<models::AnalyticsEventData>,
}

impl AnalyticsEvent {
    pub fn new(
        name: String,
        event_type: String,
        data: models::AnalyticsEventData,
    ) -> AnalyticsEvent {
        AnalyticsEvent {
            name,
            event_type,
            data: Box::new(data),
        }
    }
}
