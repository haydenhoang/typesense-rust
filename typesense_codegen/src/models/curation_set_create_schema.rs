/*
 * Typesense API
 *
 * An open source search engine for building delightful search experiences.
 *
 * The version of the OpenAPI document: 30.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CurationSetCreateSchema {
    /// Array of curation items
    #[serde(rename = "items")]
    pub items: Vec<models::CurationItemCreateSchema>,
    /// Optional description for the curation set
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
}

impl CurationSetCreateSchema {
    pub fn new(items: Vec<models::CurationItemCreateSchema>) -> CurationSetCreateSchema {
        CurationSetCreateSchema {
            items,
            description: None,
        }
    }
}
